{"ast":null,"code":"import _defineProperty from \"/Users/avishaiyaniv/Documents/Studying/Coding/React course 2/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { cartTypes } from \"../../types\";\nimport { addItemToCart } from \"../../utils/cart-utils/cartUtils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case cartTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: [...state.cartItems, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/avishaiyaniv/Documents/Studying/Coding/React course 2/crwn-clothing/src/redux/reducers/cartReducer.js"],"names":["cartTypes","addItemToCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,kCAA9B;AAEA,MAAMC,aAAa,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,SAAS,EAAE;AAA3B,CAAtB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAS,CAACS,kBAAf;AACE,+BAAYH,KAAZ;AAAmBH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAAlC;;AACF,SAAKH,SAAS,CAACU,QAAf;AACE,+BAAYJ,KAAZ;AAAmBF,QAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACI,OAA5B;AAA9B;;AACF;AACE,aAAOL,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import { cartTypes } from \"../../types\";\nimport { addItemToCart } from \"../../utils/cart-utils/cartUtils\";\n\nconst INITIAL_STATE = { hidden: true, cartItems: [] };\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartTypes.TOGGLE_CART_HIDDEN:\n      return { ...state, hidden: !state.hidden };\n    case cartTypes.ADD_ITEM:\n      return { ...state, cartItems: [...state.cartItems, action.payload] };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}