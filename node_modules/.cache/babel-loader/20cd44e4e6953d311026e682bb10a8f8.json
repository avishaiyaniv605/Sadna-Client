{"ast":null,"code":"import{createSelector}from\"reselect\";var sumOfItemsReducer=function sumOfItemsReducer(acc,currItem){return acc+currItem.quantity;};var sumOfPricesReducer=function sumOfPricesReducer(acc,currItem){return acc+currItem.price*currItem.quantity;};var selectCart=function selectCart(state){return state.cart;};export var selectCartItems=createSelector([selectCart],function(cart){return cart.cartItems;});export var selectCartItemsCount=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(sumOfItemsReducer,0);});export var selectCartTotal=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(sumOfPricesReducer,0);});","map":{"version":3,"sources":["/Users/avishaiyaniv/Documents/Studying/Coding/React course 2/crwn-clothing/src/redux/selectors/cartSelector.js"],"names":["createSelector","sumOfItemsReducer","acc","currItem","quantity","sumOfPricesReducer","price","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","selectCartTotal"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,GAAD,CAAMC,QAAN,QAAmBD,CAAAA,GAAG,CAAGC,QAAQ,CAACC,QAAlC,EAA1B,CACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACH,GAAD,CAAMC,QAAN,QACzBD,CAAAA,GAAG,CAAGC,QAAQ,CAACG,KAAT,CAAiBH,QAAQ,CAACC,QADP,EAA3B,CAGA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGV,cAAc,CAC3C,CAACO,UAAD,CAD2C,CAE3C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACE,SAAT,EAFuC,CAAtC,CAKP,MAAO,IAAMC,CAAAA,oBAAoB,CAAGZ,cAAc,CAChD,CAACU,eAAD,CADgD,CAEhD,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACE,MAAV,CAAiBZ,iBAAjB,CAAoC,CAApC,CAAJ,EAFuC,CAA3C,CAKP,MAAO,IAAMa,CAAAA,eAAe,CAAGd,cAAc,CAC3C,CAACU,eAAD,CAD2C,CAE3C,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACE,MAAV,CAAiBR,kBAAjB,CAAqC,CAArC,CAAJ,EAFkC,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst sumOfItemsReducer = (acc, currItem) => acc + currItem.quantity;\nconst sumOfPricesReducer = (acc, currItem) =>\n  acc + currItem.price * currItem.quantity;\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce(sumOfItemsReducer, 0)\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce(sumOfPricesReducer, 0)\n);\n"]},"metadata":{},"sourceType":"module"}