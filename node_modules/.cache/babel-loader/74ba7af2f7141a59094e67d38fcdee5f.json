{"ast":null,"code":"import _defineProperty from \"/Users/avishaiyaniv/Documents/Studying/Coding/React course 2/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  const existingItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n  if (existingItem) {\n    return cartItems.map(cartItem => cartItem.id === existingItem.id ? _objectSpread({}, cartItems, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, itemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["/Users/avishaiyaniv/Documents/Studying/Coding/React course 2/crwn-clothing/src/utils/cart-utils/cartUtils.js"],"names":["addItemToCart","cartItems","itemToAdd","existingItem","find","cartItem","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrD,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAArD,CAArB;;AAEA,MAAIH,YAAJ,EAAkB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBH,YAAY,CAACG,EAA7B,qBACSL,SADT;AACoBO,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AADlD,SAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAoBC,SAApB;AAA+BM,IAAAA,QAAQ,EAAE;AAAzC,KAAP;AACD,CAZM","sourcesContent":["export const addItemToCart = (cartItems, itemToAdd) => {\n  const existingItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n  if (existingItem) {\n    return cartItems.map(cartItem =>\n      cartItem.id === existingItem.id\n        ? { ...cartItems, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...itemToAdd, quantity: 1 }];\n};\n"]},"metadata":{},"sourceType":"module"}